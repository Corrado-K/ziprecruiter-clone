generator client {
     provider = "prisma-client-js"
}

datasource db {
     provider = "mongodb"
     url      = env("DATABASE_URL")
}

enum Role {
     CANDIDATE
     RECRUITER
}

model User {
     id        String    @id @default(auto()) @map("_id") @db.ObjectId
     fname     String
     lname     String
     email     String    @unique
     password  String
     role      Role      @default(CANDIDATE)
     jobPosts JobPost[]
     applications Applications[]
     createdAt DateTime  @default(now())
     updatedAt DateTime  @updatedAt
}

model JobType {
     id        String    @id @default(auto()) @map("_id") @db.ObjectId
     job_type  String
     jobPosts JobPost[]
     createdAt DateTime  @default(now())
     updatedAt DateTime  @updatedAt
}

model JobPost {
     id        String    @id @default(auto()) @map("_id") @db.ObjectId
     recruiter User      @relation(fields: [recruiter_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
     recruiter_id   String @db.ObjectId
     job_type  JobType   @relation(fields: [job_type_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
     job_type_id String @db.ObjectId
     applications Applications[]
     job_description String
     createdAt DateTime  @default(now())
     updatedAt DateTime  @updatedAt
}

model Applications {
     id        String    @id @default(auto()) @map("_id") @db.ObjectId
     candidate User      @relation(fields: [candidate_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
     candidate_id   String @db.ObjectId
     job_post  JobPost   @relation(fields: [job_post_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
     job_post_id String @db.ObjectId
     createdAt DateTime  @default(now())
     updatedAt DateTime  @updatedAt
}